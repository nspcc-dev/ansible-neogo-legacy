---

- ansible.builtin.include_tasks: 'user.yml'

- name: Create configuration directory parent
  ansible.builtin.file:
    state: directory
    path: "{{ neogo__conf_dir | realpath | dirname }}"
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Create configuration directory
  ansible.builtin.file:
    state: directory
    path: "{{ neogo__conf_dir }}"
    owner: 'root'
    group: "{{ neogo__group }}"
    mode: '0750'

- ansible.builtin.include_tasks: 'binary.yml'

- ansible.builtin.include_tasks: 'wallet.yml'

- ansible.builtin.include_tasks: 'tls.yml'

- name: Copy NeoGo config
  ansible.builtin.template:
    src: "protocol.network.yml.j2"
    dest: "{{ neogo__conf_dir }}/protocol.{{ neogo__network }}.yml"
    owner: 'root'
    group: '{{ neogo__group }}'
    mode: '0640'
  notify: [ 'Restart NeoGo service' ]

- name: Copy compose file
  ansible.builtin.template:
    src: 'docker-compose.yml.j2'
    dest: "{{ neogo__conf_dir }}/docker-compose.yml"
    owner: 'root'
    group: "{{ neogo__group }}"
    mode: '0640'
  when: neogo__use_compose | bool
  notify: [ 'Restart NeoGo service' ]

- name: Copy regular systemd unit
  ansible.builtin.template:
    src: "neogo-legacy.service.bin.j2"
    dest: "/etc/systemd/system/neogo{{ neogo__instance }}.service"
  when: not (neogo__use_compose | bool)
  notify: [ 'Restart NeoGo service' ]

- name: Copy dockerized systemd unit
  ansible.builtin.template:
    src: "neogo-legacy.service.compose.j2"
    dest: "/etc/systemd/system/neogo{{ neogo__instance }}.service"
  when: neogo__use_compose | bool
  notify: [ 'Restart NeoGo service' ]

- name: Force debops.ferm run
  ansible.builtin.include_role:
    name: debops.debops.ferm
  vars:
    ferm__dependent_rules:
      - "{{ neogo__ferm__dependent_rules }}"
  when: neogo__debops_ferm_import | bool
