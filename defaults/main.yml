---

neogo__version: 'v0.78.4'
neogo__bin_url: 'https://github.com/nspcc-dev/neo-go/releases/download/v{{ neogo__version }}/neo-go-linux-amd64'
neogo__docker_image: 'nspccdev/neo-go:{{ neogo__version }}'

# Instance name to have multiple neo-go nodes on the same host
neogo__instance: ''

neogo__user: 'neogo{{ neogo__instance }}'
neogo__group: 'neogo{{ neogo__instance }}'

neogo__conf_dir: '/etc/neogo{{ neogo__instance }}'
# Directory for chain database, snapshots and thing alike
neogo__data_dir: '/var/lib/neogo{{ neogo__instance }}'
neogo__bin_path: '/usr/bin/neogo{{ neogo__instance }}'

# Available Neo Legacy networks:  mainnet, testnet,  privnet
neogo__network: 'mainnet'

neogo__network_opts:
  mainnet:
    p2p: 10333
    rpc: 10332
    tls: 10331
    magic: 7630401
    stateroot_index: '6016000'
    free_gas_limit: '{0: 10.0, 6195000: 50.0}'
    max_tx_per_block: '{0: 500, 6195000: 200}'
    max_free_tx_per_block: '{0: 20, 6195000: 199}'
    standby_validators:
      - '03b209fd4f53a7170ea4444e0cb0a6bb6a53c2bd016926989cf85f9b0fba17a70c'
      - '02df48f60e8f3e01c48ff40b9b7f1310d7a8b2a193188befe1c2e3df740e895093'
      - '03b8d9d5771d8f513aa0869b9cc8d50986403b78c6da36890638c3d46a5adce04a'
      - '02ca0e27697b9c248f6f16e085fd0061e26f44da85b58ee835c110caa5ec3ba554'
      - '024c7b7fb6c310fccf1ba33b082519d82964ea93868d676662d4a59ad548df0e7d'
      - '02aaec38470f6aad0042c6e877cfd8087d2676b0f516fddd362801b9bd3936399e'
      - '02486fd15702c4490a26703112a5cc1d0923fd697a33406bd5a1c00e0013b09a70'
    seed_list:
      - 'seed1.ngd.network:10333'
      - 'seed2.ngd.network:10333'
      - 'seed3.ngd.network:10333'
      - 'seed4.ngd.network:10333'
      - 'seed5.ngd.network:10333'
      - 'seed6.ngd.network:10333'
      - 'seed7.ngd.network:10333'
      - 'seed8.ngd.network:10333'
      - 'seed9.ngd.network:10333'
      - 'seed10.ngd.network:10333'
  testnet:
    p2p: 20333
    rpc: 20332
    tls: 20331
    magic: 1953787457
    stateroot_index: 4380100
    free_gas_limit: '{0: 10.0, 4840000: 50.0}'
    max_tx_per_block: '{0: 500, 4840000: 200}'
    max_free_tx_per_block: '{0: 20, 4840000: 199}'
    standby_validators:
      - '0327da12b5c40200e9f65569476bbff2218da4f32548ff43b6387ec1416a231ee8'
      - '026ce35b29147ad09e4afe4ec4a7319095f08198fa8babbe3c56e970b143528d22'
      - '0209e7fd41dfb5c2f8dc72eb30358ac100ea8c72da18847befe06eade68cebfcb9'
      - '039dafd8571a641058ccc832c5e2111ea39b09c0bde36050914384f7a48bce9bf9'
      - '038dddc06ce687677a53d54f096d2591ba2302068cf123c1f2d75c2dddc5425579'
      - '02d02b1873a0863cd042cc717da31cea0d7cf9db32b74d4c72c01b0011503e2e22'
      - '034ff5ceeac41acf22cd5ed2da17a6df4dd8358fcb2bfb1a43208ad0feaab2746b'
    seed_list:
      - 'seed1.ngd.network:20333'
      - 'seed2.ngd.network:20333'
      - 'seed3.ngd.network:20333'
      - 'seed4.ngd.network:20333'
      - 'seed5.ngd.network:20333'
      - 'seed6.ngd.network:20333'
      - 'seed7.ngd.network:20333'
      - 'seed8.ngd.network:20333'
      - 'seed9.ngd.network:20333'
      - 'seed10.ngd.network:20333'
  privnet:
    p2p: 30333
    rpc: 30332
    magic: 56752
    stateroot_index: 0
    free_gas_limit: '10.0'
    max_tx_per_block: '500'
    max_free_tx_per_block: '20'
    standby_validators:
      - '02b3622bf4017bdfe317c58aed5f4c753f206b7db896046fa7d774bbc4bf7f8dc2'
    seed_list:
      - 'localhost:30332'

# Default bind address
neogo__bind_address: '0.0.0.0'

# Ports and options for each service
neogo__p2p_address: '{{ neogo__bind_address }}'
neogo__p2p_port: '{{ neogo__network_opts[neogo__network].p2p }}'
neogo__p2p_allow: []
neogo__p2p_group_allow: []
neogo__p2p_host_allow: []

neogo__rpc_enabled: True
neogo__rpc_address: '{{ neogo__bind_address }}'
neogo__rpc_port: '{{ neogo__network_opts[neogo__network].rpc }}'
# Same list will be used for TLS ports
neogo__rpc_allow: []
neogo__rpc_group_allow: []
neogo__rpc_host_allow: []
neogo__rpc_cors_kludge: False

# TLS requires RPC to be enabled
neogo__tls_enabled: False
neogo__tls_address: '{{ neogo__bind_address }}'
neogo__tls_port: '{{ neogo__network_opts[neogo__network].tls }}'
neogo__tls_cert_file: '{{ neogo__conf_dir }}/server.crt'
neogo__tls_key_file: '{{ neogo__conf_dir }}/server.key'

neogo__metrics_enabled: False
neogo__metrics_address: 'localhost'
neogo__metrics_port: 2112
neogo__metrics_allow: []
neogo__metrics_group_allow: []
neogo__metrics_host_allow: []

neogo__pprof_enabled: False
neogo__pprof_address: 'localhost'
neogo__pprof_port: 2113
neogo__pprof_allow: []
neogo__pprof_group_allow: []
neogo__pprof_host_allow: []

# StateRoot description:
# https://github.com/nspcc-dev/neo-go/blob/master-2.x/docs/neox.md
neogo__stateroot_enabled: False
neogo__stateroot_enable_index: '{{ neogo__network_opts[neogo__network].stateroot_index }}'
neogo__stateroot_keep_latest_state: false

# Node wallet options. Unlock the wallet if you run a consensus node.
neogo__wallet_unlock: false
neogo__wallet_path: '{{ neogo__conf_dir }}/wallet.json'
neogo__wallet_pass: ''
neogo__wallet: ''

# Systemd unit may use docker compose to run neo-go in container, instead of
# local binary.
neogo__use_compose: false

# Neo Node configuration parameters
neogo__seconds_per_block: '15'
neogo__magic: '{{ neogo__network_opts[neogo__network].magic }}'
neogo__seed_list: '{{ neogo__network_opts[neogo__network].seed_list }}'
neogo__standby_validators: '{{ neogo__network_opts[neogo__network].standby_validators }}'
neogo__min_peers: "{{ (neogo__network == 'privnet')|ternary(0, 5) }}"
neogo__max_peers: '100'
neogo__low_priority_th: '0.001'

# transaction fees
neogo__enrollment_transaction_fee: 1000
neogo__issue_transaction_fee: 500
neogo__publish_transaction_fee: 500
neogo__register_transaction_fee: 10000
neogo__free_gas_limit: '{{ neogo__network_opts[neogo__network].free_gas_limit }}'
neogo__max_tx_per_block: '{{ neogo__network_opts[neogo__network].max_tx_per_block }}'
neogo__max_free_tx_per_block: '{{ neogo__network_opts[neogo__network].max_free_tx_per_block }}'

# firewall configuration to be applied with debops.ferm role
neogo__ferm__dependent_rules:
  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_p2p'
    dport: [ '{{ neogo__p2p_port }}' ]
    daddr: [ '{{ neogo__p2p_address }}' ]
    saddr: '{{ neogo__p2p_allow + neogo__p2p_group_allow + neogo__p2p_host_allow }}'
    protocol: 'tcp'
    role: 'neogo-legacy'
    rule_state: 'present'

  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_rpc'
    dport: [ '{{ neogo__rpc_port }}' ]
    daddr: [ '{{ neogo__rpc_address }}' ]
    saddr: '{{ neogo__rpc_allow + neogo__rpc_group_allow + neogo__rpc_host_allow }}'
    protocol: 'tcp'
    role: 'neogo-legacy'
    rule_state: "{{ 'present' if neogo__rpc_enabled and not ( neogo__rpc_address == 'localhost' or '127.0.0.0/8'|ansible.utils.network_in_usable( neogo__rpc_address ) or '::1/128'|ansible.utils.network_in_usable( neogo__rpc_address ) ) else 'absent' }}"

  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_tls'
    dport: [ '{{ neogo__tls_port }}' ]
    daddr: [ '{{ neogo__tls_address }}' ]
    saddr: '{{ neogo__rpc_allow + neogo__rpc_group_allow + neogo__rpc_host_allow }}'
    protocol: 'tcp'
    role: 'neogo-legacy'
    rule_state: "{{ 'present' if neogo__tls_enabled and not ( neogo__tls_address == 'localhost' or '127.0.0.0/8'|ansible.utils.network_in_usable( neogo__tls_address ) or '::1/128'|ansible.utils.network_in_usable( neogo__tls_address ) ) else 'absent' }}"

  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_metrics'
    dport: [ '{{ neogo__metrics_port }}' ]
    daddr: [ '{{ neogo__metrics_address }}' ]
    saddr: '{{ neogo__metrics_allow + neogo__metrics_group_allow + neogo__metrics_host_allow }}'
    protocol: 'tcp'
    role: 'neogo-legacy'
    rule_state: "{{ 'present' if neogo__metrics_enabled and not ( neogo__metrics_address == 'localhost' or '127.0.0.0/8'|ansible.utils.network_in_usable( neogo__metrics_address ) or '::1/128'|ansible.utils.network_in_usable( neogo__metrics_address ) ) else 'absent' }}"

  - type: 'accept'
    name: 'neogo{{ neogo__instance }}_pprof'
    dport: [ '{{ neogo__pprof_port }}' ]
    daddr: [ '{{ neogo__pprof_address }}' ]
    saddr: '{{ neogo__pprof_allow + neogo__pprof_group_allow + neogo__pprof_host_allow }}'
    protocol: 'tcp'
    role: 'neogo-legacy'
    rule_state: "{{ 'present' if neogo__pprof_enabled and not ( neogo__pprof_address == 'localhost' or '127.0.0.0/8'|ansible.utils.network_in_usable( neogo__pprof_address ) or '::1/128'|ansible.utils.network_in_usable( neogo__pprof_address ) ) else 'absent' }}"
